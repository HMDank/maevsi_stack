secrets:
  maevsi_sqitch-target:
    file: ./secrets/maevsi/sqitch-target.secret
  pg-amqp-bridge_amqp-uri:
    file: ./secrets/pg-amqp-bridge/amqp-uri.secret
  pg-amqp-bridge_postgresql-uri:
    file: ./secrets/pg-amqp-bridge/postgresql-uri.secret
  portainer_admin-password:
    file: ./secrets/portainer/admin-password.secret
  postgres_db:
    file: ./secrets/postgres/db.secret
  postgres_password:
    file: ./secrets/postgres/password.secret
  postgres_role_maevsi-postgraphile_password:
    file: ./secrets/postgres/role_maevsi-postgraphile_password.secret
  postgres_user:
    file: ./secrets/postgres/user.secret
  rabbitmq_password:
    file: ./secrets/rabbitmq/password.secret
  rabbitmq_user:
    file: ./secrets/rabbitmq/user.secret
  stomper_aws:
    file: ./secrets/stomper/aws.secret
services:
  adminer:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.7.7-standalone@sha256:b640b5bfb250cba1683d2462065180f8f083c3aeb78c8af4b83199ada4e28249
    volumes:
    - ../production/configurations/adminer/adminer.css:/var/www/html/adminer.css:ro
  maevsi:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.maevsi.middlewares=redirectregex_alpha,redirectscheme
      - traefik.http.routers.maevsi.rule=Host(`${STACK_DOMAIN}`, `alpha.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.maevsi_secure.middlewares=redirectregex_alpha
      - traefik.http.routers.maevsi_secure.rule=Host(`${STACK_DOMAIN}`, `alpha.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.maevsi_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.maevsi.loadbalancer.server.port=8080
    environment: # Must be prefixed by "GRIDSOME_" (https://gridsome.org/docs/environment-variables/#usage-in-the-browser)
      GRIDSOME_STACK_DOMAIN: ${STACK_DOMAIN}
    image: maevsi/maevsi:dev
    secrets:
    - maevsi_sqitch-target
    - postgres_role_maevsi-postgraphile_password
    user: node:node
    volumes:
    - ../../maevsi/gridsome/:/srv/app/
    - ../../maevsi/sqitch/:/srv/sqitch/
  pg-amqp-bridge:
    environment:
      AMQP_URI_FILE: /run/secrets/pg-amqp-bridge_amqp-uri
      BRIDGE_CHANNELS: account_register:account_register,invite:invite
      DELIVERY_MODE: PERSISTENT
      POSTGRESQL_URI_FILE: /run/secrets/pg-amqp-bridge_postgresql-uri
      RUST_LOG: info
    image: subzerocloud/pg-amqp-bridge:0.0.7@sha256:300f15c12e0b7f570872073c14f9940f64ffb79ca20ba434fff64154d51aefe7
    secrets:
    - pg-amqp-bridge_amqp-uri
    - pg-amqp-bridge_postgresql-uri
  portainer:
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=redirectscheme
      - traefik.http.routers.portainer.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      replicas: 1
    image: portainer/portainer:1.23.2@sha256:3ad81644b777c07004e9b6818881e905e09035944d771cea8b4707c81681cd59
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:1.5.1@sha256:6e1a21dddb13a89310576716f85c174c8b0fbc1d733e2bcaad87a3fdee4b8b14
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgraphile:
    command: --default-role maevsi_anonymous --jwt-secret ${POSTGRAPHILE_JWT_SECRET} --jwt-token-identifier maevsi.jwt --owner-connection ${POSTGRAPHILE_OWNER_CONNECTION} --schema maevsi --watch
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.postgraphile.middlewares=redirectscheme
      - traefik.http.routers.postgraphile.rule=Host(`postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.postgraphile_secure.middlewares=header_cors
      - traefik.http.routers.postgraphile_secure.rule=Host(`postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.postgraphile_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.postgraphile.loadbalancer.server.port=5000
    environment:
      PGDATABASE: ${POSTGRAPHILE_PGDATABASE}
      PGHOST: postgres
      PGPASSWORD: ${POSTGRAPHILE_PGPASSWORD}
      PGUSER: ${POSTGRAPHILE_PGUSER}
    image: graphile/postgraphile:v4.6.0@sha256:393a54d52a418d20b0d13d02a465972fff56f4225bf7502bfc26babf8af8fb65
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
  postgres:
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:12.2-alpine@sha256:7421834e2eae283f829d3face39acba2e8ffbe24be756f7cabdfe778e7bfec57
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - /var/run/postgresql/:/var/run/postgresql/ #DARGSTACK-REMOVE
    - postgres_data:/var/lib/postgresql/data
  rabbitmq:
    environment:
      RABBITMQ_CONFIG_FILE: /etc/rabbitmq/rabbitmq
      RABBITMQ_DEFAULT_PASS_FILE: /run/secrets/rabbitmq_password
      RABBITMQ_DEFAULT_USER_FILE: /run/secrets/rabbitmq_user
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq.middlewares=redirectscheme
      - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${STACK_DOMAIN}`)
      - traefik.http.routers.rabbitmq_secure.rule=Host(`rabbitmq.${STACK_DOMAIN}`)
      - traefik.http.routers.rabbitmq_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    hostname: rabbitmq
    image: rabbitmq:3.8.3-management-alpine@sha256:49a6a9f5b0acbec1aef81ecf10ae6f7bc481d189ecec81c8cbdb95cfa0ced445
    secrets:
    - rabbitmq_password
    - rabbitmq_user
    volumes:
    - ../production/configurations/rabbitmq/:/etc/rabbitmq/
    - rabbitmq_data:/var/lib/rabbitmq
  stomper:
    environment:
      RABBITMQ_PASS_FILE: /run/secrets/rabbitmq_password
      RABBITMQ_USER_FILE: /run/secrets/rabbitmq_user
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: maevsi/stomper:dev
    secrets:
    - rabbitmq_password
    - rabbitmq_user
    - stomper_aws
    volumes:
    - ../../stomper/:/srv/app/
  traefik:
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    - --log.level=DEBUG #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.header_cors.headers.accessControlAllowHeaders=authorization,content-type
      - traefik.http.middlewares.header_cors.headers.accessControlAllowOrigin=*
      - traefik.http.middlewares.redirectregex_alpha.redirectregex.regex=^https?:\/\/(www\.)?${STACK_DOMAIN}\/(.*)
      - traefik.http.middlewares.redirectregex_alpha.redirectregex.replacement=https://alpha.${STACK_DOMAIN}/$${2}
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:2.2.1@sha256:8945fdecf9d6534fd1093b67e11a31f717810b187a93696fd6f496e3fb3b053f
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
version: "3.7"
volumes:
  portainer_data: {}
  postgres_data: {}
  rabbitmq_data: {}
