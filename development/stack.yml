secrets:
  maevsi_sqitch-target:
    file: ./secrets/maevsi/sqitch-target.secret
  portainer_admin-password:
    file: ./secrets/portainer/admin-password.secret
  postgres_db:
    file: ./secrets/postgres/db.secret
  postgres_password:
    file: ./secrets/postgres/password.secret
  postgres_role_maevsi-postgraphile_password:
    file: ./secrets/postgres/role_maevsi-postgraphile_password.secret
  postgres_user:
    file: ./secrets/postgres/user.secret
services:
  adminer:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.7.5-standalone@sha256:fe67b6561e5176c02387329a767cced36946db525b7f684da38059c1f7e5f8cf
    volumes:
    - ../production/configurations/adminer/adminer.css:/var/www/html/adminer.css:ro
  maevsi:
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.maevsi.middlewares=redirectregex_alpha,redirectscheme
      - traefik.http.routers.maevsi.rule=Host(`${STACK_DOMAIN}`, `alpha.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.maevsi_secure.middlewares=redirectregex_alpha
      - traefik.http.routers.maevsi_secure.rule=Host(`${STACK_DOMAIN}`, `alpha.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.maevsi_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.maevsi.loadbalancer.server.port=8080
    environment:
      GRIDSOME_STACK_DOMAIN: ${STACK_DOMAIN}
    image: maevsi/maevsi:dev
    secrets:
    - maevsi_sqitch-target
    - postgres_role_maevsi-postgraphile_password
    user: node:node
    volumes:
    - ../../maevsi/gridsome/:/srv/app/
    - ../../maevsi/sqitch/:/srv/sqitch/
  portainer:
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify --admin-password-file '/run/secrets/portainer_admin-password'
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.middlewares=redirectscheme
      - traefik.http.routers.portainer.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.rule=Host(`portainer.${STACK_DOMAIN}`)
      - traefik.http.routers.portainer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      replicas: 1
    image: portainer/portainer:1.22.2@sha256:824ac88d88d509a8fa2971fc6c7c923321e960c32deaf0cb3c6838002e3de660
    secrets:
    - portainer_admin-password
    volumes:
    - portainer_data:/data
  portainer-agent:
    deploy:
      mode: global
      placement:
        constraints:
        - node.platform.os == linux
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
    image: portainer/agent:1.5.1@sha256:6e1a21dddb13a89310576716f85c174c8b0fbc1d733e2bcaad87a3fdee4b8b14
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/lib/docker/volumes:/var/lib/docker/volumes
  postgraphile:
    command: --default-role maevsi_anonymous --jwt-secret ${POSTGRAPHILE_JWT_SECRET} --jwt-token-identifier maevsi.jwt --jwt-verify-ignore-expiration true --owner-connection ${POSTGRAPHILE_OWNER_CONNECTION} --schema maevsi --watch
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.postgraphile.middlewares=redirectscheme
      - traefik.http.routers.postgraphile.rule=Host(`postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.postgraphile_secure.middlewares=header_cors
      - traefik.http.routers.postgraphile_secure.rule=Host(`postgraphile.${STACK_DOMAIN}`)
      - traefik.http.routers.postgraphile_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.postgraphile.loadbalancer.server.port=5000
    environment:
      PGDATABASE: ${POSTGRAPHILE_PGDATABASE}
      PGHOST: postgres
      PGPASSWORD: ${POSTGRAPHILE_PGPASSWORD}
      PGUSER: ${POSTGRAPHILE_PGUSER}
    image: graphile/postgraphile:v4.4.4@sha256:c33b0f801f042f6e38eb20cafadfe0009ec43b5a074e571f49d8beb2d2a24f59
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
  postgres:
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:12.1-alpine@sha256:2f0ef60e0c005b23f03e898f12d29f8d4567d10febba914df1d66b668c0dde94
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - /var/run/postgresql/:/var/run/postgresql/ #DARGSTACK-REMOVE
    - postgres_data:/var/lib/postgresql/data
  traefik:
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.header_cors.headers.accessControlAllowHeaders=authorization,content-type
      - traefik.http.middlewares.header_cors.headers.accessControlAllowOrigin=*
      - traefik.http.middlewares.redirectregex_alpha.redirectregex.regex=^https?:\/\/(www\.)?${STACK_DOMAIN}\/(.*)
      - traefik.http.middlewares.redirectregex_alpha.redirectregex.replacement=https://alpha.${STACK_DOMAIN}/$${2}
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:v2.0.5@sha256:671d29600a66bbb28bfffc3755878a30c5d89d1186c7ded1878b902ba95068c6
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
version: "3.7"
volumes:
  portainer_data: {}
  postgres_data: {}
