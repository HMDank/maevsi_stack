secrets:
  postgres-backup_db:
  # The database's name.
    external: true
  traefik_cf-dns-api-token:
  # The DNS provider's DNS API token.
    external: true
  traefik_cf-zone-api-token:
  # The DNS provider's zone API token.
    external: true
services:
  adminer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.adminer_secure.middlewares=auth
      - traefik.http.routers.adminer_secure.tls.certresolver=default
  maevsi:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.maevsi_secure.tls.certresolver=default
    image: maevsi/maevsi:0.20.0@sha256:65d2ab1cd46927a3eb13ce054d762d54655d187739bd52e04e423fa08857480b
    user: (( prune ))
    volumes: (( prune ))
  portainer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.portainer_secure.tls.certresolver=default
  postgraphile:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.postgraphile_secure.tls.certresolver=default
  postgres_backup:
  # You cannot access the database backup directly.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:12-alpine@sha256:ee000b2c9493ba5c74e5109858dd5bd01a7722ee24daf528d29d95acf7c5c27e
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backups/postgres/:/backups/
  rabbitmq:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.rabbitmq_secure.tls.certresolver=default
  stomper:
    image: maevsi/stomper:0.3.1@sha256:adfc9fcabea45878b3bb703c0292f161eb3536be9883497aa7dad2b1eb2d79c5
    volumes: (( prune ))
  traefik:
    command:
    - (( prepend ))
    - --certificatesResolvers.default.acme.email=${STACK_ACME_EMAIL}
    - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
    - --certificatesResolvers.default.acme.dnsChallenge.provider=${STACK_ACME_PROVIDER}
    deploy:
      labels:
      - (( append ))
      - traefik.http.middlewares.auth.basicauth.users=${STACK_AUTH_BASIC}
      - traefik.http.routers.traefik_secure.middlewares=auth
      - traefik.http.routers.traefik_secure.tls.certresolver=default
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik_cf-dns-api-token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik_cf-zone-api-token
    secrets:
    - traefik_cf-dns-api-token
    - traefik_cf-zone-api-token
  traefik_certs-dumper:
  # You cannot access the reverse proxy's certificate helper directly.
    command:
    - file
    - --clean=false
    - --crt-name="$STACK_DOMAIN"
    - --dest=/etc/traefik/acme/
    - --key-name="$STACK_DOMAIN"
    - --source=/etc/traefik/acme/acme.json
    - --version=v2
    - --watch
    environment:
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: ldez/traefik-certs-dumper:v2.7.0@sha256:63614a85fe984b62716c638bca1a0a837e86f7249ef3c0e7f9db8a1fed743c96
    volumes:
    - acme_data:/etc/traefik/acme/
  tusd:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.tusd_secure.tls.certresolver=default
version: "3.7"
volumes:
  acme_data:
  # The reverse proxy's certificate data.
    {}
