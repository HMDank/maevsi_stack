secrets:
  postgres-backup_db:
  # The database's name.
    external: true
  traefik_cf-dns-api-token:
  # The DNS provider's DNS API token.
    external: true
  traefik_cf-zone-api-token:
  # The DNS provider's zone API token.
    external: true
services:
  adminer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.adminer_secure.tls.certresolver=default
  maevsi:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.maevsi_secure.tls.certresolver=default
    image: ghcr.io/maevsi/maevsi:1.20.2@sha256:e91969a8e34413b2cf433f9214e92366e5234a751ec409cf310e6adcd6f7be0a
    user: (( prune ))
  maevsi_beta:
  # You can access the main project's beta version frontend at [beta.localhost](https://localhost/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.maevsi_beta_cors.headers.accessControlAllowHeaders=authorization,hook-name
      - traefik.http.middlewares.maevsi_beta_cors.headers.accessControlAllowMethods=GET,POST,PUT,DELETE
      - traefik.http.middlewares.maevsi_beta_cors.headers.accessControlAllowOriginList=http://localhost:3000
      - traefik.http.routers.maevsi_beta.entryPoints=web
      - traefik.http.routers.maevsi_beta.middlewares=redirectscheme
      - traefik.http.routers.maevsi_beta.rule=Host(`${STACK_DOMAIN}`, `beta.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.maevsi_beta_secure.entryPoints=web-secure
      - traefik.http.routers.maevsi_beta_secure.rule=Host(`${STACK_DOMAIN}`, `beta.${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.services.maevsi_beta.loadbalancer.server.port=3000
      - traefik.http.routers.maevsi_beta_secure.tls.certresolver=default
    environment:
      CONSOLA_LEVEL: 4 # 0: fatal/error, 1: warn, 2: log, 3: info/success, 4: debug, 5: trace
      NUXT_PUBLIC_GOOGLE_ANALYTICS_ID: ${GOOGLE_ANALYTICS_ID} # Must be prefixed by "NUXT_PUBLIC_" (https://nuxt.com/docs/api/composables/use-runtime-config)
      NUXT_PUBLIC_STACK_DOMAIN: ${STACK_DOMAIN} # Must be prefixed by "NUXT_PUBLIC_" (https://nuxt.com/docs/api/composables/use-runtime-config)
      POSTGRAPHILE_JWT_PUBLIC_KEY_FILE: /run/config/postgraphile_jwt-public-key
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_ROLE_MAEVSI_TUSD_PASSWORD_FILE: /run/secrets/postgres_role_maevsi-tusd_password
    image: ghcr.io/maevsi/maevsi:1.19.0-beta.1@sha256:78064c2e5c5362eefbcd746280c8876e6c09c32ba237a3d971769a427a1973a8
    secrets:
    - maevsi_sqitch-target
    - postgres_db
    - postgres_role_maevsi-postgraphile_password
    - postgres_role_maevsi-stomper_password
    - postgres_role_maevsi-tusd_password
    volumes:
    - ./configurations/postgraphile/jwtRS256.key.pub:/run/config/postgraphile_jwt-public-key:ro
  minio: (( prune ))
  portainer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.portainer_secure.tls.certresolver=default
  postgraphile:
    deploy:
      labels:
      - (( append ))
      - traefik.http.middlewares.postgraphile_auth.plugin.body-forward-auth.AuthUrl=http://maevsi_beta:3001/api/auth-proxy
      - traefik.http.routers.postgraphile_secure.tls.certresolver=default
  postgres_backup:
  # You cannot access the database backup directly.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:15-alpine@sha256:da879cc0012841820854bee1a71306b116cf2d0c85f25de342522f0b6f281a4e
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backups/postgres/:/backups/
  rabbitmq:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.rabbitmq_secure.tls.certresolver=default
  sqitch:
    image: maevsi/sqitch:1.17.4@sha256:6a08d7cc543c0d95f80228fbf1dd17c768fdce597a27a187cf4b5495a6049e60
    volumes: (( prune ))
  stomper:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.stomper_secure.tls.certresolver=default
    image: ghcr.io/maevsi/stomper:0.30.6@sha256:6415b02e14dc34909f2bb1946c80eaf28627eb5422de85874a9642fd7163b063
    user: (( prune ))
    volumes: (( prune ))
  traefik:
    command:
    - (( prepend ))
    - --certificatesResolvers.default.acme.email=${STACK_ACME_EMAIL}
    - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
    - --certificatesResolvers.default.acme.dnsChallenge.provider=${STACK_ACME_PROVIDER}
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.traefik_secure.tls.certresolver=default
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik_cf-dns-api-token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik_cf-zone-api-token
    secrets:
    - traefik_cf-dns-api-token
    - traefik_cf-zone-api-token
  traefik_certs-dumper:
  # You cannot access the reverse proxy's certificate helper directly.
    command:
    - file
    - --clean=false
    - --crt-name="$STACK_DOMAIN"
    - --dest=/etc/traefik/acme/
    - --key-name="$STACK_DOMAIN"
    - --source=/etc/traefik/acme/acme.json
    - --version=v2
    - --watch
    environment:
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: ldez/traefik-certs-dumper:v2.8.1@sha256:2734462fc8290feab0e34a00d5f3e4992ba74f8e3712d74efff7ae703d0e7e87
    volumes:
    - acme_data:/etc/traefik/acme/
  tusd:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.tusd_secure.tls.certresolver=default
version: "3.7"
volumes:
  acme_data:
  # The reverse proxy's certificate data.
    {}
  minio_data: (( prune ))
