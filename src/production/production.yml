secrets:
  postgres-backup_db:
  # The database's name.
    external: true
  traefik_cf-dns-api-token:
  # The DNS provider's DNS API token.
    external: true
  traefik_cf-zone-api-token:
  # The DNS provider's zone API token.
    external: true
services:
  adminer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.adminer_secure.middlewares=auth
      - traefik.http.routers.adminer_secure.tls.certresolver=default
  maevsi:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.maevsi_secure.tls.certresolver=default
    image: maevsi/maevsi:0.55.0@sha256:181f598445fea7ca943cf9c71faa147aa803d59f88b0d3cad1be3412f11f6168
    user: (( prune ))
    volumes: (( prune ))
  portainer:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.portainer_secure.tls.certresolver=default
  postgraphile:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.postgraphile_secure.tls.certresolver=default
  postgres_backup:
  # You cannot access the database backup directly.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres-backup_db
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: prodrigestivill/postgres-backup-local:12-alpine@sha256:d56f212bc4ddf472663ead7b6a3b6b1b69cc5691de4af819b8625318f05d0e46
    secrets:
    - postgres-backup_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
    - ../production/backups/postgres/:/backups/
  rabbitmq:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.rabbitmq_secure.tls.certresolver=default
  stomper:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.stomper_secure.tls.certresolver=default
    image: maevsi/stomper:0.12.1@sha256:bb53af60d72c32f0e2dccdf875227d4b3c9dcfa57e0fd54bbbe247731a8051e9
    user: (( prune ))
    volumes: (( prune ))
  traefik:
    command:
    - (( prepend ))
    - --certificatesResolvers.default.acme.email=${STACK_ACME_EMAIL}
    - --certificatesResolvers.default.acme.storage=/etc/traefik/acme/acme.json
    - --certificatesResolvers.default.acme.dnsChallenge.provider=${STACK_ACME_PROVIDER}
    deploy:
      labels:
      - (( append ))
      - traefik.http.middlewares.auth.basicauth.users=${STACK_AUTH_BASIC}
      - traefik.http.routers.traefik_secure.middlewares=auth
      - traefik.http.routers.traefik_secure.tls.certresolver=default
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/traefik_cf-dns-api-token
      CF_ZONE_API_TOKEN_FILE: /run/secrets/traefik_cf-zone-api-token
    secrets:
    - traefik_cf-dns-api-token
    - traefik_cf-zone-api-token
  traefik_certs-dumper:
  # You cannot access the reverse proxy's certificate helper directly.
    command:
    - file
    - --clean=false
    - --crt-name="$STACK_DOMAIN"
    - --dest=/etc/traefik/acme/
    - --key-name="$STACK_DOMAIN"
    - --source=/etc/traefik/acme/acme.json
    - --version=v2
    - --watch
    environment:
      STACK_DOMAIN: ${STACK_DOMAIN}
    image: ldez/traefik-certs-dumper:v2.7.4@sha256:a56e96221153e24301263e16de278657204e9c5aff5bf1be0d55575619fd42f0
    volumes:
    - acme_data:/etc/traefik/acme/
  tusd:
    deploy:
      labels:
      - (( append ))
      - traefik.http.routers.tusd_secure.tls.certresolver=default
version: "3.7"
volumes:
  acme_data:
  # The reverse proxy's certificate data.
    {}
